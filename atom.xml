<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://xiaoxiong314.github.io</id>
    <title>Gridea</title>
    <updated>2020-09-15T14:05:39.004Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://xiaoxiong314.github.io"/>
    <link rel="self" href="https://xiaoxiong314.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://xiaoxiong314.github.io/images/avatar.png</logo>
    <icon>https://xiaoxiong314.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Gridea</rights>
    <entry>
        <title type="html"><![CDATA[Civil3D API定义多视图快（Multiview Block）]]></title>
        <id>https://xiaoxiong314.github.io/post/civil3d-api-ding-yi-duo-shi-tu-kuai-multiview-block/</id>
        <link href="https://xiaoxiong314.github.io/post/civil3d-api-ding-yi-duo-shi-tu-kuai-multiview-block/">
        </link>
        <updated>2020-09-15T11:20:59.000Z</updated>
        <content type="html"><![CDATA[<p>Multiview Block是Autocad Architecture中的概念。</p>
<pre><code class="language-C#">[CommandMethod(&quot;DEFINEMVBLOCK&quot;)]
public void DefineMVBlock()
{
	Document acDoc = Autodesk.AutoCAD.ApplicationServices.Core.Application.DocumentManager.MdiActiveDocument;

	using (Transaction trans = acDoc.Database.TransactionManager.StartTransaction())
	{
        BlockTable acBlkTbl;
        acBlkTbl = trans.GetObject(acDoc.Database.BlockTableId, OpenMode.ForRead) as BlockTable;
        
        ObjectId blk1 = acBlkTbl[&quot;tree_2d&quot;];
        ObjectId blk_3d = acBlkTbl[&quot;tree_3d&quot;];
        Aecdb.DisplayRepresentation displayRep_2d = new Aecdb.DisplayRepresentation();
        Aecdb.DisplayRepresentation displayRep_3d = new Aecdb.DisplayRepresentation();
        
        ObjectIdCollection oids = Aecdb.DisplayRepresentationManager.GetActiveDisplayRepresentationSets(acDoc.Database);                
        foreach (ObjectId id in oids)
        {
            Aecdb.DisplaySet ds = trans.GetObject(id,OpenMode.ForRead) as Aecdb.DisplaySet;
            foreach(ObjectId drid in ds.DisplayRepresentationIds )
            {
                Aecdb.DisplayRepresentation disp = trans.GetObject(drid,OpenMode.ForRead) as Aecdb.DisplayRepresentation;
                if (disp.Name == &quot;AecDbDispRepMvBlockRef&quot;) displayRep_2d = disp;
                if (disp.Name == &quot;AecDbDispRepMvBlockRefModel&quot;) displayRep_3d = disp;
            }
        }
        
        Aecdb.MultiViewBlockViewDefinition mvblockViewDef_2d = new Aecdb.MultiViewBlockViewDefinition();
        mvblockViewDef_2d.SetViewOn(Aecdb.ViewDirection.Top, true); 
        mvblockViewDef_2d.BlockId = blk1;
        Aecdb.MultiViewBlockDisplayRepresentationDefinition mvblockRepDef_2d = new Aecdb.MultiViewBlockDisplayRepresentationDefinition();
        mvblockRepDef_2d.ViewDefinitions.Add(mvblockViewDef_2d);
        mvblockRepDef_2d.DisplayRepresentationId = displayRep_2d.Id;
        
        Aecdb.MultiViewBlockViewDefinition mvblockViewDef_3d = new Aecdb.MultiViewBlockViewDefinition();
        mvblockViewDef_3d.SetAllViews(true);
        mvblockViewDef_3d.BlockId = blk_3d;
        Aecdb.MultiViewBlockDisplayRepresentationDefinition mvblockRepDef_3d = new Aecdb.MultiViewBlockDisplayRepresentationDefinition();
        mvblockRepDef_3d.ViewDefinitions.Add(mvblockViewDef_3d);
        mvblockRepDef_3d.DisplayRepresentationId = displayRep_3d.Id;
                
        Aecdb.MultiViewBlockDefinition mvblockDef = new Aecdb.MultiViewBlockDefinition();
        mvblockDef.DisplayRepresentationDefinitions.Add(mvblockRepDef_2d);
        mvblockDef.DisplayRepresentationDefinitions.Add(mvblockRepDef_3d);

        mvblockDef.Description = &quot;This is a MVBlock defined by Net API.&quot;;

        Aecdb.DictionaryMultiViewBlockDefinition mvblockDic = new Aecdb.DictionaryMultiViewBlockDefinition(acDoc.Database);
        
        mvblockDic.AddNewRecord(&quot;MyMVBlock&quot;,mvblockDef);
        trans.Commit();
    }
 }
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://xiaoxiong314.github.io/post/hello-gridea/</id>
        <link href="https://xiaoxiong314.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>